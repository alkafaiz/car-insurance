{"version":3,"sources":["routes/Layout/index.jsx","routes/index.js","components/DatePicker/index.jsx","api/index.js","features/appSlice.js","containers/PersonalDetailForm/index.jsx","screens/PersonalDetails.jsx","containers/CarDetailForm/index.jsx","screens/CarDetails.jsx","containers/Success/index.jsx","screens/SubmitSuccess.jsx","app/store.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","children","my","STEPS","PERSONAL_DETAILS","CAR_DETAILS","SUCCESS","CustomDatePicker","label","isRequired","placeholder","value","onChange","error","isInvalid","inputProps","minDate","maxDate","CustomInput","forwardRef","ref","onClick","readOnly","mt","wrapperClassName","selected","customInput","data-testid","defaultProps","api","url","success","Promise","resolve","setTimeout","message","submit","createAsyncThunk","payload","thunkApi","a","plateNumber","getState","app","data","response","rejectWithValue","appSlice","createSlice","name","initialState","stepIndex","firstName","lastName","dob","email","hasClaim","licenseYear","carMake","carModel","carManufacturerDate","isLoading","reducers","setStepIndex","state","action","setPersonalDetails","setCarDetails","extraReducers","pending","rejected","fulfilled","actions","appReducer","reducer","connect","initialValues","dispatch","nextStep","history","useHistory","mb","size","Date","validationSchema","Yup","required","onSubmit","values","toISOString","push","formik","handleSubmit","field","form","errors","touched","htmlFor","id","DatePicker","date","setFieldValue","getFieldProps","subYears","colorScheme","isSubmitting","type","isFullWidth","PersonalDetails","useEffect","document","title","prevStep","toast","useToast","onBack","then","unwrapResult","pathname","search","catch","description","status","duration","isClosable","as","console","log","spacing","map","index","mr","variant","aria-label","icon","FiArrowLeft","disabled","CarDetails","Success","location","useLocation","useState","isModalOpen","setIsModalOpen","newuser","qs","parse","onCloseModal","isOpen","onClose","SubmitSuccess","configureStore","theme","extendTheme","styles","global","width","App","store","basename","exact","from","to","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e99952e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Heading } from \"@chakra-ui/react\";\r\n\r\nfunction Layout({ children }) {\r\n  return (\r\n    <Container>\r\n      <Heading my={10}>Car Insurance</Heading> {children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport { Layout };\r\n","export * from \"./Layout\";\r\n\r\nexport const ROOT = \"/\";\r\nexport const STEPS = \"/steps\";\r\nexport const PERSONAL_DETAILS = STEPS + \"/personal-details\";\r\nexport const CAR_DETAILS = STEPS + \"/car-details\";\r\nexport const SUCCESS = STEPS + \"/success\";\r\n","import React, { forwardRef } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage\r\n} from \"@chakra-ui/react\";\r\n\r\nfunction CustomDatePicker({\r\n  label,\r\n  isRequired,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error,\r\n  isInvalid,\r\n  inputProps,\r\n  minDate,\r\n  maxDate\r\n}) {\r\n  const CustomInput = forwardRef(({ value, onClick, inputProps }, ref) => (\r\n    <Input\r\n      {...inputProps}\r\n      onClick={onClick}\r\n      ref={ref}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      readOnly\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <FormControl isInvalid={isInvalid} isRequired={isRequired} mt={4}>\r\n      <FormLabel>{label}</FormLabel>\r\n      <DatePicker\r\n        wrapperClassName=\"datepicker-container\"\r\n        selected={value}\r\n        onChange={onChange}\r\n        customInput={<CustomInput inputProps={inputProps} />}\r\n        minDate={minDate}\r\n        maxDate={maxDate}\r\n      />\r\n      <FormErrorMessage data-testid=\"error-text\">{error}</FormErrorMessage>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomDatePicker.defaultProps = {\r\n  isRequired: false,\r\n  placeholder: \"\"\r\n};\r\n\r\nCustomDatePicker.propTypes = {\r\n  onChange: PropTypes.func,\r\n  isInvalid: PropTypes.bool,\r\n  error: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  label: PropTypes.string.isRequired,\r\n  isRequired: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  minDate: PropTypes.object,\r\n  maxDate: PropTypes.object\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","export const api = {\r\n  submit: (url, success = true) =>\r\n    new Promise(resolve => {\r\n      setTimeout(function() {\r\n        const response =\r\n          success === false\r\n            ? { success: false, message: \"Unable to process requests.\" }\r\n            : { success: true };\r\n\r\n        resolve(response);\r\n      }, 2000);\r\n    })\r\n};\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { api } from \"../api\";\r\n\r\nconst initialState = {\r\n  stepIndex: 0,\r\n  data: {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    dob: \"\",\r\n    email: \"\",\r\n    plateNumber: \"\",\r\n    hasClaim: \"yes\",\r\n    licenseYear: \"0\",\r\n    carMake: \"\",\r\n    carModel: \"\",\r\n    carManufacturerDate: \"\"\r\n  },\r\n  isLoading: false,\r\n  success: false\r\n};\r\n\r\nexport const submit = createAsyncThunk(\r\n  \"app/submit\",\r\n  async (payload, thunkApi) => {\r\n    const { plateNumber } = thunkApi.getState().app.data;\r\n\r\n    const mockFailed = plateNumber === \"111\";\r\n\r\n    if (mockFailed) {\r\n      const response = await api.submit(\"/submit\", false);\r\n      return thunkApi.rejectWithValue(response);\r\n    } else {\r\n      const response = await api.submit(\"/submit\");\r\n      return response;\r\n    }\r\n  }\r\n);\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState,\r\n  reducers: {\r\n    setStepIndex: (state, action) => {\r\n      state.stepIndex = action.payload;\r\n    },\r\n    setPersonalDetails: (state, action) => {\r\n      state.data.firstName = action.payload.firstName;\r\n      state.data.lastName = action.payload.lastName;\r\n      state.data.dob = action.payload.dob;\r\n      state.data.email = action.payload.email;\r\n    },\r\n    setCarDetails: (state, action) => {\r\n      state.data.plateNumber = action.payload.plateNumber;\r\n      state.data.hasClaim = action.payload.hasClaim;\r\n      state.data.licenseYear = action.payload.licenseYear;\r\n      state.data.carMake = action.payload.carMake;\r\n      state.data.carModel = action.payload.carModel;\r\n      state.data.carManufacturerDate = action.payload.carManufacturerDate;\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [submit.pending]: state => {\r\n      state.isLoading = true;\r\n    },\r\n    [submit.rejected]: state => {\r\n      state.isLoading = false;\r\n      state.success = false;\r\n    },\r\n    [submit.fulfilled]: state => {\r\n      state.isLoading = false;\r\n      state.success = true;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setStepIndex,\r\n  setPersonalDetails,\r\n  setCarDetails\r\n} = appSlice.actions;\r\n\r\nexport const appReducer = appSlice.reducer;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n  Heading\r\n} from \"@chakra-ui/react\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CAR_DETAILS } from \"../../routes\";\r\nimport DatePicker from \"../../components/DatePicker\";\r\nimport { subYears } from \"date-fns\";\r\nimport { connect } from \"react-redux\";\r\nimport { setPersonalDetails, setStepIndex } from \"../../features/appSlice\";\r\n\r\nexport function PersonalDetailForm({\r\n  nextStep,\r\n  setPersonalDetails,\r\n  initialValues\r\n}) {\r\n  const history = useHistory();\r\n\r\n  const onSubmit = values => {\r\n    const dob = new Date(values.dob).toISOString();\r\n    setPersonalDetails({ ...values, dob });\r\n    nextStep();\r\n    history.push(CAR_DETAILS);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Heading mb={6} size=\"md\">\r\n        Personal detail\r\n      </Heading>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: initialValues.firstName,\r\n          lastName: initialValues.lastName,\r\n          dob:\r\n            initialValues.dob === \"\"\r\n              ? initialValues.dob\r\n              : new Date(initialValues.dob),\r\n          email: initialValues.email\r\n        }}\r\n        validationSchema={Yup.object({\r\n          firstName: Yup.string().required(\"Required\"),\r\n          lastName: Yup.string().required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email format\")\r\n            .required(\"Required\"),\r\n          dob: Yup.date().required(\"Required\")\r\n        })}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {formik => (\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            <Field name=\"firstName\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={form.errors.firstName && form.touched.firstName}\r\n                >\r\n                  <FormLabel htmlFor=\"first-name\">First name</FormLabel>\r\n                  <Input {...field} id=\"first-name\" placeholder=\"First name\" />\r\n                  <FormErrorMessage>{form.errors.firstName}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"lastName\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={form.errors.lastName && form.touched.lastName}\r\n                >\r\n                  <FormLabel htmlFor=\"last-name\">Last name</FormLabel>\r\n                  <Input {...field} id=\"last-name\" placeholder=\"Last name\" />\r\n                  <FormErrorMessage>{form.errors.lastName}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"email\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={form.errors.email && form.touched.email}\r\n                >\r\n                  <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n                  <Input {...field} id=\"email\" placeholder=\"Email address\" />\r\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n\r\n            <DatePicker\r\n              label=\"Date of birth\"\r\n              placeholder=\"Date of birth\"\r\n              isRequired={true}\r\n              value={formik.values.dob}\r\n              onChange={date => formik.setFieldValue(\"dob\", date)}\r\n              error={formik.errors.dob}\r\n              inputProps={formik.getFieldProps(\"dob\")}\r\n              isInvalid={formik.errors.dob && formik.touched.dob}\r\n              maxDate={subYears(new Date(), 18)}\r\n              minDate={subYears(new Date(), 100)}\r\n            />\r\n            <Button\r\n              mt={8}\r\n              colorScheme=\"teal\"\r\n              isLoading={formik.isSubmitting}\r\n              type=\"submit\"\r\n              isFullWidth\r\n            >\r\n              Next\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  initialValues: {\r\n    firstName: state.app.data.firstName,\r\n    lastName: state.app.data.lastName,\r\n    dob: state.app.data.dob,\r\n    email: state.app.data.email\r\n  }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setPersonalDetails: payload => dispatch(setPersonalDetails(payload)),\r\n  nextStep: () => dispatch(setStepIndex(1))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalDetailForm);\r\n","import React, { useEffect } from \"react\";\r\nimport PersonalDetailForm from \"../containers/PersonalDetailForm\";\r\n\r\nfunction PersonalDetails() {\r\n  useEffect(() => {\r\n    document.title = \"Personal Detail | Car Insurance\";\r\n  }, []);\r\n\r\n  return <PersonalDetailForm />;\r\n}\r\n\r\nexport { PersonalDetails };\r\n","import React, { useEffect } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  FormErrorMessage,\r\n  Button,\r\n  RadioGroup,\r\n  Select,\r\n  HStack,\r\n  Radio,\r\n  Flex,\r\n  IconButton,\r\n  Icon,\r\n  useToast,\r\n  Heading\r\n} from \"@chakra-ui/react\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PERSONAL_DETAILS, SUCCESS } from \"../../routes\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport DatePicker from \"../../components/DatePicker\";\r\nimport { connect } from \"react-redux\";\r\nimport { setStepIndex, setCarDetails, submit } from \"../../features/appSlice\";\r\nimport { unwrapResult } from \"@reduxjs/toolkit\";\r\n\r\nexport function CarDetailForm({\r\n  nextStep,\r\n  prevStep,\r\n  initialValues,\r\n  setCarDetails,\r\n  submit,\r\n  isSubmitting,\r\n  stepIndex\r\n}) {\r\n  const history = useHistory();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    if (stepIndex !== 1) {\r\n      prevStep();\r\n      history.push(PERSONAL_DETAILS);\r\n    }\r\n  }, [stepIndex, prevStep, history]);\r\n\r\n  const onSubmit = values => {\r\n    const carManufacturerDate = new Date(\r\n      values.carManufacturerDate\r\n    ).toISOString();\r\n\r\n    setCarDetails({ ...values, carManufacturerDate });\r\n    submit()\r\n      .then(unwrapResult)\r\n      .then(response => {\r\n        history.push({\r\n          pathname: SUCCESS,\r\n          search: \"?newuser=true\"\r\n        });\r\n        nextStep();\r\n      })\r\n      .catch(error => {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message,\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true\r\n        });\r\n      });\r\n  };\r\n\r\n  const onBack = () => {\r\n    prevStep();\r\n    history.push(PERSONAL_DETAILS);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Heading mb={6} size=\"md\">\r\n        Car detail\r\n      </Heading>\r\n      <Formik\r\n        initialValues={{\r\n          plateNumber: initialValues.plateNumber,\r\n          hasClaim: initialValues.hasClaim,\r\n          licenseYear: initialValues.licenseYear,\r\n          carMake: initialValues.carMake,\r\n          carModel: initialValues.carModel,\r\n          carManufacturerDate:\r\n            initialValues.carManufacturerDate === \"\"\r\n              ? initialValues.carManufacturerDate\r\n              : new Date(initialValues.carManufacturerDate)\r\n        }}\r\n        validationSchema={Yup.object({\r\n          plateNumber: Yup.string().required(\"Required\"),\r\n          licenseYear: Yup.string().required(\"Required\"),\r\n          carMake: Yup.string().required(\"Required\"),\r\n          carModel: Yup.string().required(\"Required\"),\r\n          carManufacturerDate: Yup.date().required(\"Required\")\r\n        })}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {formik => (\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            <Field name=\"plateNumber\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={\r\n                    form.errors.plateNumber && form.touched.plateNumber\r\n                  }\r\n                >\r\n                  <FormLabel htmlFor=\"plate-number\">Plate number</FormLabel>\r\n                  <Input\r\n                    {...field}\r\n                    id=\"plate-number\"\r\n                    placeholder=\"Plate number\"\r\n                  />\r\n                  <FormErrorMessage>{form.errors.plateNumber}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"hasClaim\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  as=\"fieldset\"\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={form.errors.hasClaim && form.touched.hasClaim}\r\n                >\r\n                  <FormLabel as=\"legend\">\r\n                    Do you made any Claims in last 5 years?\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    // {...field}\r\n                    value={formik.values.hasClaim}\r\n                    onChange={value => {\r\n                      formik.setFieldValue(\"hasClaim\", value);\r\n\r\n                      console.log(\"val\", value);\r\n                    }}\r\n                  >\r\n                    <HStack spacing=\"24px\">\r\n                      <Radio value=\"yes\">Yes</Radio>\r\n                      <Radio value=\"no\">No</Radio>\r\n                    </HStack>\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"licenseYear\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={\r\n                    form.errors.licenseYear && form.touched.licenseYear\r\n                  }\r\n                >\r\n                  <FormLabel>\r\n                    How many Years do you have Driving Licence?\r\n                  </FormLabel>\r\n                  <Select {...field}>\r\n                    {[\"0\", \"1\", \"2\", \"3\", \"4\", \"5+\"].map((value, index) => (\r\n                      <option key={index} value={value}>\r\n                        {value}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"carMake\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={form.errors.carMake && form.touched.carMake}\r\n                >\r\n                  <FormLabel htmlFor=\"car-make\">Car make</FormLabel>\r\n                  <Input {...field} id=\"car-make\" placeholder=\"Car make\" />\r\n                  <FormErrorMessage>{form.errors.carMake}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n            <Field name=\"carModel\">\r\n              {({ field, form }) => (\r\n                <FormControl\r\n                  mb={4}\r\n                  isRequired\r\n                  isInvalid={form.errors.carModel && form.touched.carModel}\r\n                >\r\n                  <FormLabel htmlFor=\"car-model\">Car model</FormLabel>\r\n                  <Input {...field} id=\"car-model\" placeholder=\"Car model\" />\r\n                  <FormErrorMessage>{form.errors.carModel}</FormErrorMessage>\r\n                </FormControl>\r\n              )}\r\n            </Field>\r\n\r\n            <DatePicker\r\n              label=\"Car manufacturer date\"\r\n              placeholder=\"Car manufacturer date\"\r\n              isRequired={true}\r\n              value={formik.values.carManufacturerDate}\r\n              onChange={date =>\r\n                formik.setFieldValue(\"carManufacturerDate\", date)\r\n              }\r\n              error={formik.errors.carManufacturerDate}\r\n              inputProps={formik.getFieldProps(\"carManufacturerDate\")}\r\n              isInvalid={\r\n                formik.errors.carManufacturerDate &&\r\n                formik.touched.carManufacturerDate\r\n              }\r\n              maxDate={new Date()}\r\n            />\r\n\r\n            <Flex my={8}>\r\n              <IconButton\r\n                mr={2}\r\n                variant=\"outline\"\r\n                colorScheme=\"teal\"\r\n                aria-label=\"go-back\"\r\n                icon={<Icon as={FiArrowLeft} />}\r\n                onClick={onBack}\r\n                disabled={isSubmitting}\r\n              />\r\n              <Button\r\n                colorScheme=\"teal\"\r\n                isLoading={isSubmitting}\r\n                type=\"submit\"\r\n                isFullWidth\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Flex>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  initialValues: {\r\n    plateNumber: state.app.data.plateNumber,\r\n    hasClaim: state.app.data.hasClaim,\r\n    licenseYear: state.app.data.licenseYear,\r\n    carMake: state.app.data.carMake,\r\n    carModel: state.app.data.carModel,\r\n    carManufacturerDate: state.app.data.carManufacturerDate\r\n  },\r\n  isSubmitting: state.app.isLoading,\r\n  stepIndex: state.app.stepIndex\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCarDetails: payload => dispatch(setCarDetails(payload)),\r\n  submit: () => dispatch(submit()),\r\n  nextStep: () => dispatch(setStepIndex(2)),\r\n  prevStep: () => dispatch(setStepIndex(0))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CarDetailForm);\r\n","import React, { useEffect } from \"react\";\r\nimport CarDetailForm from \"../containers/CarDetailForm\";\r\n\r\nfunction CarDetails() {\r\n  useEffect(() => {\r\n    document.title = \"Car Detail | Car Insurance\";\r\n  }, []);\r\n\r\n  return <CarDetailForm />;\r\n}\r\n\r\nexport { CarDetails };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport qs from \"query-string\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  ModalFooter\r\n} from \"@chakra-ui/modal\";\r\nimport { Text, Button } from \"@chakra-ui/react\";\r\n\r\nfunction Success() {\r\n  const location = useLocation();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { newuser } = qs.parse(location.search);\r\n    if (newuser && newuser === \"true\") {\r\n      setIsModalOpen(true);\r\n    }\r\n  }, [location]);\r\n\r\n  const onCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>success</div>\r\n      <Modal isOpen={isModalOpen} onClose={onCloseModal}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Welcome!</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Text>New user message</Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" onClick={onCloseModal}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React, { useEffect } from \"react\";\r\nimport Success from \"../containers/Success\";\r\n\r\nfunction SubmitSuccess() {\r\n  useEffect(() => {\r\n    document.title = \"Success | Car Insurance\";\r\n  }, []);\r\n\r\n  return <Success />;\r\n}\r\n\r\nexport { SubmitSuccess };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { appReducer } from \"../features/appSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer\r\n  }\r\n});\r\n","import { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport {\n  ROOT,\n  STEPS,\n  PERSONAL_DETAILS,\n  CAR_DETAILS,\n  SUCCESS,\n  Layout\n} from \"./routes\";\nimport { PersonalDetails, CarDetails, SubmitSuccess } from \"./screens\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      \".datepicker-container\": {\n        width: \"100%\"\n      }\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ChakraProvider theme={theme}>\n        <Layout>\n          <HashRouter basename={ROOT}>\n            <Switch>\n              <Redirect exact from={ROOT} to={PERSONAL_DETAILS} />\n              <Redirect exact from={STEPS} to={PERSONAL_DETAILS} />\n              <Route path={PERSONAL_DETAILS} component={PersonalDetails} />\n              <Route path={CAR_DETAILS} component={CarDetails} />\n              <Route path={SUCCESS} component={SubmitSuccess} />\n            </Switch>\n          </HashRouter>\n        </Layout>\n      </ChakraProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}